{"ast":null,"code":"var _jsxFileName = \"/Users/camdenchin/Desktop/mtg-card-explorer/frontend/src/components/CardSearch.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  cards\n}) {\n  _s();\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\n\n  if (!cards.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cards found with images.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this); // Friendly message when no cards are returned\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search-results\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        padding: '16px',\n        textAlign: 'center',\n        cursor: 'pointer'\n      },\n      onClick: () => navigate(`/card/${card.id}`) // Navigate to the card detail page on click\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.image_url,\n        alt: card.name,\n        className: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(CardList, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CardList;\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(\n  // Ensures `cards` is an array\n  PropTypes.shape({\n    // Ensures each item in the array is an object with a specific shape\n    id: PropTypes.string.isRequired,\n    // Added PropTypes validation for id (required for navigation)\n    image_url: PropTypes.string.isRequired,\n    // `image_url` must be a string and is required\n    name: PropTypes.string.isRequired // `name` must be a string and is required\n    // Add any other card properties you use here\n  })).isRequired // The `cards` prop itself is required\n};\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","PropTypes","useNavigate","jsxDEV","_jsxDEV","CardList","cards","_s","navigate","length","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","display","flexWrap","justifyContent","map","card","index","margin","border","borderRadius","padding","textAlign","cursor","onClick","src","image_url","alt","name","className","_c","propTypes","arrayOf","shape","string","isRequired","$RefreshReg$"],"sources":["/Users/camdenchin/Desktop/mtg-card-explorer/frontend/src/components/CardSearch.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CardList({ cards }) {\n    const navigate = useNavigate(); // Get the navigate function from react-router-dom\n\n    if (!cards.length) {\n        return <p>No cards found with images.</p>; // Friendly message when no cards are returned\n    }\n\n    return (\n        <div id=\"search-results\" style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n            {cards.map((card, index) => (\n                <div \n                    key={index} \n                    style={{ margin: '10px', border: '1px solid #ccc', borderRadius: '8px', padding: '16px', textAlign: 'center', cursor: 'pointer' }}\n                    onClick={() => navigate(`/card/${card.id}`)} // Navigate to the card detail page on click\n                >\n                    <img src={card.image_url} alt={card.name} className=\"card-image\" />\n                    {/* <p>{card.name}</p> */}\n                    {/* <p>{card.mana_cost || 'No mana cost'}</p> */}\n                </div>\n            ))}\n        </div>\n    );\n}\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf( // Ensures `cards` is an array\n        PropTypes.shape({ // Ensures each item in the array is an object with a specific shape\n            id: PropTypes.string.isRequired, // Added PropTypes validation for id (required for navigation)\n            image_url: PropTypes.string.isRequired, // `image_url` must be a string and is required\n            name: PropTypes.string.isRequired, // `name` must be a string and is required\n            // Add any other card properties you use here\n        })\n    ).isRequired, // The `cards` prop itself is required\n};\n\nexport default CardList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,IAAI,CAACI,KAAK,CAACG,MAAM,EAAE;IACf,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC/C;EAEA,oBACIV,OAAA;IAAKW,EAAE,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAT,QAAA,EAC3FJ,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBlB,OAAA;MAEIY,KAAK,EAAE;QAAEO,MAAM,EAAE,MAAM;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,YAAY,EAAE,KAAK;QAAEC,OAAO,EAAE,MAAM;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAU,CAAE;MAClIC,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,SAASa,IAAI,CAACN,EAAE,EAAE,CAAE,CAAC;MAAA;MAAAL,QAAA,eAE7CN,OAAA;QAAK0B,GAAG,EAAET,IAAI,CAACU,SAAU;QAACC,GAAG,EAAEX,IAAI,CAACY,IAAK;QAACC,SAAS,EAAC;MAAY;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAJ9DQ,KAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOT,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACP,EAAA,CAtBQF,QAAQ;EAAA,QACIH,WAAW;AAAA;AAAAiC,EAAA,GADvB9B,QAAQ;AAwBjBA,QAAQ,CAAC+B,SAAS,GAAG;EACjB9B,KAAK,EAAEL,SAAS,CAACoC,OAAO;EAAE;EACtBpC,SAAS,CAACqC,KAAK,CAAC;IAAE;IACdvB,EAAE,EAAEd,SAAS,CAACsC,MAAM,CAACC,UAAU;IAAE;IACjCT,SAAS,EAAE9B,SAAS,CAACsC,MAAM,CAACC,UAAU;IAAE;IACxCP,IAAI,EAAEhC,SAAS,CAACsC,MAAM,CAACC,UAAU,CAAE;IACnC;EACJ,CAAC,CACL,CAAC,CAACA,UAAU,CAAE;AAClB,CAAC;AAED,eAAenC,QAAQ;AAAC,IAAA8B,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}