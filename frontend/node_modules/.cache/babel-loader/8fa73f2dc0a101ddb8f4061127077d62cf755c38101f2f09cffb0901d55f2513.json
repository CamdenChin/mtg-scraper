{"ast":null,"code":"var _jsxFileName = \"/Users/camdenchin/Desktop/mtg-card-explorer/frontend/src/components/CardDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardDetail() {\n  _s();\n  const {\n    cardId\n  } = useParams(); // Get the card ID from the URL\n  const [card, setCard] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCardDetails = async () => {\n      console.log(`Fetching details for card ID: ${cardId}`); // Log the card ID being used for fetching\n      try {\n        let response = await fetch(`https://api.scryfall.com/cards/${cardId}`);\n        console.log('API response status:', response.status); // Log the response status\n        if (!response.ok) {\n          if (response.status === 404) {\n            console.log('Card not found by ID, attempting by name...');\n            // Fetch by name if ID not found\n            response = await fetch(`https://api.scryfall.com/cards/named?exact=${cardId}`);\n            if (!response.ok) {\n              throw new Error('Card not found by ID or name');\n            }\n          } else {\n            throw new Error('Network response was not ok');\n          }\n        }\n        const data = await response.json();\n        console.log('Fetched card data:', data); // Log the fetched card data\n        setCard(data);\n      } catch (error) {\n        console.error('Error fetching card details:', error);\n        setError(error.message);\n      }\n    };\n    fetchCardDetails();\n  }, [cardId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  if (!card) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), card.image_uris && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.image_uris.large,\n      alt: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }, this), card.oracle_text && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.oracle_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 34\n    }, this), card.mana_cost && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.mana_cost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }, this), card.type_line && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.type_line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this), card.set_name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Set: \", card.set_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(CardDetail, \"r7QLXkUuN+brzxYu12EBHmm+564=\", false, function () {\n  return [useParams];\n});\n_c = CardDetail;\nexport default CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","CardDetail","_s","cardId","card","setCard","error","setError","fetchCardDetails","console","log","response","fetch","status","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","image_uris","src","large","alt","oracle_text","mana_cost","type_line","set_name","_c","$RefreshReg$"],"sources":["/Users/camdenchin/Desktop/mtg-card-explorer/frontend/src/components/CardDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction CardDetail() {\n    const { cardId } = useParams(); // Get the card ID from the URL\n    const [card, setCard] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchCardDetails = async () => {\n            console.log(`Fetching details for card ID: ${cardId}`); // Log the card ID being used for fetching\n            try {\n                let response = await fetch(`https://api.scryfall.com/cards/${cardId}`);\n                console.log('API response status:', response.status); // Log the response status\n                if (!response.ok) {\n                    if (response.status === 404) {\n                        console.log('Card not found by ID, attempting by name...');\n                        // Fetch by name if ID not found\n                        response = await fetch(`https://api.scryfall.com/cards/named?exact=${cardId}`);\n                        if (!response.ok) {\n                            throw new Error('Card not found by ID or name');\n                        }\n                    } else {\n                        throw new Error('Network response was not ok');\n                    }\n                }\n                const data = await response.json();\n                console.log('Fetched card data:', data); // Log the fetched card data\n                setCard(data);\n            } catch (error) {\n                console.error('Error fetching card details:', error);\n                setError(error.message);\n            }\n        };\n\n        fetchCardDetails();\n    }, [cardId]);\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    if (!card) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h2>{card.name}</h2>\n            {card.image_uris && <img src={card.image_uris.large} alt={card.name} />}\n            {card.oracle_text && <p>{card.oracle_text}</p>}\n            {card.mana_cost && <p>{card.mana_cost}</p>}\n            {card.type_line && <p>{card.type_line}</p>}\n            {card.set_name && <p>Set: {card.set_name}</p>}\n            {/* Add any other card details you want to display */}\n        </div>\n    );\n}\n\nexport default CardDetail;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}