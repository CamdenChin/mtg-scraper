{"ast":null,"code":"var _jsxFileName = \"/Users/camdenchin/Desktop/mtg-card-explorer/frontend/src/components/CardDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardDetail() {\n  _s();\n  const {\n    cardId\n  } = useParams();\n  const location = useLocation();\n  const [card, setCard] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchCardDetails = async (url, fallbackName = null) => {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        if (response.status === 404 && fallbackName) {\n          const nameUrl = `https://api.scryfall.com/cards/named?fuzzy=${encodeURIComponent(fallbackName)}`;\n          return fetchCardDetails(nameUrl);\n        }\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setCard(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    const cardName = new URLSearchParams(location.search).get('name');\n    const url = `https://api.scryfall.com/cards/${cardId}`;\n    fetchCardDetails(url, cardName);\n  }, [cardId, location.search]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n  if (!card) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), card.image_uris && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.image_uris.large,\n      alt: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }, this), card.oracle_text && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.oracle_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 34\n    }, this), card.mana_cost && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.mana_cost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }, this), card.type_line && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.type_line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 32\n    }, this), card.set_name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Set: \", card.set_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(CardDetail, \"ZOkWPJE4k2Bzq5le3xczO6vL5zo=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = CardDetail;\nexport default CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","jsxDEV","_jsxDEV","CardDetail","_s","cardId","location","card","setCard","error","setError","fetchCardDetails","url","fallbackName","response","fetch","ok","status","nameUrl","encodeURIComponent","Error","data","json","message","cardName","URLSearchParams","search","get","children","fileName","_jsxFileName","lineNumber","columnNumber","name","image_uris","src","large","alt","oracle_text","mana_cost","type_line","set_name","_c","$RefreshReg$"],"sources":["/Users/camdenchin/Desktop/mtg-card-explorer/frontend/src/components/CardDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\n\nfunction CardDetail() {\n    const { cardId } = useParams();\n    const location = useLocation();\n    const [card, setCard] = useState(null);\n    const [error, setError] = useState(null);\n\n    const fetchCardDetails = async (url, fallbackName = null) => {\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                if (response.status === 404 && fallbackName) {\n                    const nameUrl = `https://api.scryfall.com/cards/named?fuzzy=${encodeURIComponent(fallbackName)}`;\n                    return fetchCardDetails(nameUrl);\n                }\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setCard(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    useEffect(() => {\n        const cardName = new URLSearchParams(location.search).get('name');\n        const url = `https://api.scryfall.com/cards/${cardId}`;\n        fetchCardDetails(url, cardName);\n    }, [cardId, location.search]);\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    if (!card) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h2>{card.name}</h2>\n            {card.image_uris && <img src={card.image_uris.large} alt={card.name} />}\n            {card.oracle_text && <p>{card.oracle_text}</p>}\n            {card.mana_cost && <p>{card.mana_cost}</p>}\n            {card.type_line && <p>{card.type_line}</p>}\n            {card.set_name && <p>Set: {card.set_name}</p>}\n        </div>\n    );\n}\n\nexport default CardDetail;\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,gBAAgB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,YAAY,GAAG,IAAI,KAAK;IACzD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MACjC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QACd,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIJ,YAAY,EAAE;UACzC,MAAMK,OAAO,GAAG,8CAA8CC,kBAAkB,CAACN,YAAY,CAAC,EAAE;UAChG,OAAOF,gBAAgB,CAACO,OAAO,CAAC;QACpC;QACA,MAAM,IAAIE,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCd,OAAO,CAACa,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;IAC3B;EACJ,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,MAAM2B,QAAQ,GAAG,IAAIC,eAAe,CAACnB,QAAQ,CAACoB,MAAM,CAAC,CAACC,GAAG,CAAC,MAAM,CAAC;IACjE,MAAMf,GAAG,GAAG,kCAAkCP,MAAM,EAAE;IACtDM,gBAAgB,CAACC,GAAG,EAAEY,QAAQ,CAAC;EACnC,CAAC,EAAE,CAACnB,MAAM,EAAEC,QAAQ,CAACoB,MAAM,CAAC,CAAC;EAE7B,IAAIjB,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAA0B,QAAA,EAAMnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,IAAI,CAACzB,IAAI,EAAE;IACP,oBAAOL,OAAA;MAAA0B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACI9B,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAKrB,IAAI,CAAC0B;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnBzB,IAAI,CAAC2B,UAAU,iBAAIhC,OAAA;MAAKiC,GAAG,EAAE5B,IAAI,CAAC2B,UAAU,CAACE,KAAM;MAACC,GAAG,EAAE9B,IAAI,CAAC0B;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtEzB,IAAI,CAAC+B,WAAW,iBAAIpC,OAAA;MAAA0B,QAAA,EAAIrB,IAAI,CAAC+B;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7CzB,IAAI,CAACgC,SAAS,iBAAIrC,OAAA;MAAA0B,QAAA,EAAIrB,IAAI,CAACgC;IAAS;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCzB,IAAI,CAACiC,SAAS,iBAAItC,OAAA;MAAA0B,QAAA,EAAIrB,IAAI,CAACiC;IAAS;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCzB,IAAI,CAACkC,QAAQ,iBAAIvC,OAAA;MAAA0B,QAAA,GAAG,OAAK,EAACrB,IAAI,CAACkC,QAAQ;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd;AAAC5B,EAAA,CA/CQD,UAAU;EAAA,QACIJ,SAAS,EACXC,WAAW;AAAA;AAAA0C,EAAA,GAFvBvC,UAAU;AAiDnB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}